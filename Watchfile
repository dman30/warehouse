# Run me with:
#   $ watchr spec/specs.watchr

# --------------------------------------------------
# Rules
# --------------------------------------------------
watch( '^spec/(.*)/(.*)_spec\.rb' ) { |m| rspec m[0] }
watch( '^spec/(.*)_spec\.rb' )      { |m| rspec m[0] }
watch( '^app/(.*)/(.*)\.rb' )       { |m| rspec "spec/#{m[1]}/#{m[2]}_spec.rb" }
watch( '^lib/(.*)/(.*)\.rb' )       { |m| rspec "spec/#{m[2]}_spec.rb" }

# --------------------------------------------------
# Signal Handling
# --------------------------------------------------
Signal.trap('INT' ) { abort("\n") } # Ctrl-C

# --------------------------------------------------
# Helpers
# --------------------------------------------------

def rspec( path )
  run "clear"
  if not File.exists?(path)
    puts "File #{path} does not exist!"
  elsif File.read(path).include?(":focus => true")
    run "bundle exec rspec -t @focus #{path}"
  else
    run "bundle exec rspec --color --format doc #{path}"
  end
end

def run( cmd )
  puts   cmd
  system cmd
end

